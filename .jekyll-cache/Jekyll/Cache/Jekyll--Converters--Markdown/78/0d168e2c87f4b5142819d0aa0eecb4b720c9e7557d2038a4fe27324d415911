I"<p>SQLite consists of a single file as the database and a set of CLI commands. “Like all magnificent things, it’s very simple.”</p>

<p>I first shook hands with SQLite whilst building stuff in Ruby on Rails. At first, I wondered how this fabled database ran, and how I could connect to it, but didn’t press the issue because it just worked. Rails’ “Convention Over Configuration” metholodology resulted in me having a clear picture of the database in my head already.</p>

<p>Then along came the need to actually see some data. I downloaded <a href="http://sqliteman.yarpen.cz/">sqliteman</a> thinking I just need some GUI to connect to some localhost server, as my usual workflow demanded.</p>

<p>Upon trying to use it though, I eventually discovered that the database was not a client-server setup. It was, in fact, powered through some flat file under <code class="highlighter-rouge">db/</code> inside the project itself. I opened it with sqliteman and everything just worked.</p>

<p>Several months later, I had the distinct feeling that a GUI was too much for something that felt as minimal as SQLite. All of my data is just sitting right there in that file, after all.</p>

<p>It was then that I discovered something was already available from the command line for me from the start. That something was <code class="highlighter-rouge">sqlite3</code> itself. After using it for an hour the other night, I am happy to say that it is part of my Rails workflow now.</p>

<h3 id="rails-example">Rails Example</h3>

<p>From inside a Rails project, open the sqlite database inside the db/ folder:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>db/
sqlite3 development.sqlite3
</code></pre></div></div>

<p>This results in a <code class="highlighter-rouge">sqlite&gt;</code> prompt.</p>

<h3 id="pretty-output">Pretty Output</h3>

<p>By default, <code class="highlighter-rouge">SELECT</code> queries will show a jumbled mess of data, which especially sucks for <code class="highlighter-rouge">select *</code> queries that are pulling back a lot of columns. Enable a prettier, more readable display with:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sqlite&gt;.header on
sqlite&gt;.mode column
sqlite&gt;.timer on
</code></pre></div></div>

<p>Current options can be verified with:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sqlite&gt;.show
</code></pre></div></div>

<h3 id="meat-and-potatoes-commands">Meat and Potatoes Commands</h3>

<p>The essential commands for me are:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sqlite&gt;.show <span class="c"># display sqlite3 commands</span>
sqlite&gt;.tables <span class="c">#list all tables in the database</span>
sqlite&gt;.schema table_name <span class="c"># show schema for some **table_name**</span>
</code></pre></div></div>

<p>To exit <code class="highlighter-rouge">sqlite3</code> and go back to the regular command line:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sqlite&gt;.exit
</code></pre></div></div>

<p>And that’s all there is to get going with simple, self-contained SQLite.</p>
:ET